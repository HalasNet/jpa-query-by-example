<?xml version="1.0" encoding="UTF-8"?>
<!-- ! (c) Copyright 2005-2012 JAXIO, http://www.jaxio.com ! Source code 
	generated by Celerio, a Jaxio product ! Want to use Celerio within your company? 
	email us at info@jaxio.com ! Follow us on twitter: @springfuse ! Template 
	pack-backend-jpa:src/test/resources/spring/applicationContext-test.p.vm.xml -->
<beans default-lazy-init="true"
	xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
			http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
			http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

	<context:component-scan base-package="org.querybyexample.jpa" />

	<!-- transaction -->
	<tx:annotation-driven />

	<!-- datasource -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" lazy-init="false" p:driverClassName="org.h2.Driver"
		p:url="jdbc:h2:~/.h2/qbeexample1;MVCC=TRUE" p:username="qbe"
		p:password="qbe" p:initialSize="5" p:maxActive="100" p:maxIdle="30"
		p:maxWait="1000" p:poolPreparedStatements="true" p:defaultAutoCommit="false"
		p:removeAbandoned="true" p:removeAbandonedTimeout="60">
		<description>
			Simple datasource. This is a direct access to the
			datasource that can be used for specific queries that need to bypass
			hibernate functionalities.
			However, if you
			need to use JDBC, please
			look at hibernate SQL-QUERIES, they would most probably be a more
			elegant way to solve your problem.
		</description>
	</bean>

	<!-- jpa -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
		p:entityManagerFactory-ref="entityManagerFactory">
		<description>Please read
			http://www.springframework.org/docs/reference/transaction.html
		</description>
	</bean>
	<bean id="hibernateJpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<description>Allow spring to configure hibernate specific settings
		</description>
	</bean>
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		p:dataSource-ref="dataSource" p:persistenceUnitName="appPU"
		p:jpaVendorAdapter-ref="hibernateJpaVendorAdapter" p:jpaProperties="classpath:hibernate.properties">
		<description>Build the entity manager with Hibernate as a provider
		</description>
	</bean>
	<util:property-path id="sessionFactory"
		path="entityManagerFactory.sessionFactory" />
	<jdbc:embedded-database id="dataSource" type="H2">
		<jdbc:script location="file:./src/test/resources/create.sql" />
	</jdbc:embedded-database>
</beans>